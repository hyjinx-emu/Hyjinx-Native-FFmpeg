name: publish

on:
  push:
    # branches:
    #   - main
  # release:
  #   types: [ published ]

permissions:
  contents: write
  pull-requests: write

env:
  FFMPEG_VERSION: 5.1.5 # This needs to be updated to match the FFmpeg version being compiled.
  DECODERS: "h264,vp8"

jobs:
  build-ffmpeg:
    name: build (${{ matrix.platform.name }})
    runs-on: ${{ matrix.platform.runner }}

    strategy:
      matrix:
        platform:
          # - { name: win-x64,   runner: ubuntu-latest, arch: x86_64, target-os: mingw32, cross-prefix: x86_64-w64-mingw32- }
          - { name: linux-x64, runner: ubuntu-latest, arch: x86_64, target-os: linux }
      fail-fast: false
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: FFmpeg/FFmpeg
          ref: n${{ env.FFMPEG_VERSION }}

      - name: Install common dependencies
        shell: bash
        run: |
          sudo apt-get update -qq
          sudo apt-get -y install \
            autoconf automake build-essential cmake git-core libass-dev \
            libfreetype6-dev libgnutls28-dev libmp3lame-dev libsdl2-dev \
            libtool libva-dev libvdpau-dev libvorbis-dev libxcb1-dev \
            libxcb-shm0-dev libxcb-xfixes0-dev meson ninja-build pkg-config \
            texinfo wget yasm zlib1g-dev
          sudo apt-get -y install \
            libunistring-dev libaom-dev libdav1d-dev

      - name: Install custom dependencies
        shell: bash
        run: |
          sudo apt-get -y install \
            libx265-dev libnuma-dev libvpx-dev

      - name: Configure FFmpeg for Windows
        shell: bash
        run: |
          ./configure \
            --arch=${{ matrix.platform.arch }} \
            --disable-debug \
            --enable-gpl \
            --enable-libx264 \
            --enable-libvpx \
            --enable-shared \
            --enable-cross-compile \
            --prefix=$GITHUB_WORKSPACE/out

      # - name: Configure FFmpeg for Linux
      #   if: matrix.platform.name == 'linux-x64'
      #   env:
      #     LDFLAGS: "-static-libgcc -static-libstdc++"
      #   run: 
      #     ./configure \
      #       --arch=${{ matrix.platform.arch }} \
      #       --disable-everything \
      #       --disable-static \
      #       --disable-doc \
      #       --disable-programs \
      #       --disable-swscale \
      #       --disable-avformat \
      #       --disable-swresample \
      #       --disable-avdevice \
      #       --disable-avfilter \
      #       --disable-debug \
      #       --enable-lto \
      #       --enable-asm \
      #       --enable-nasm \
      #       --enable-avcodec \
      #       --enable-shared \
      #       --enable-decoder="${{ env.DECODERS }}" \
      #       --enable-stripping \
      #       --enable-cross-compile \
      #       --prefix=$GITHUB_WORKSPACE/out

      # - name: Configure FFmpeg for Windows
      #   if: matrix.platform.name == 'win-x64'
      #   run: |
      #     ./configure \
      #       --arch=${{ matrix.platform.arch }} \
      #       --target-os=${{ matrix.platform.target-os }} \
      #       --cross-prefix=${{ matrix.platform.cross-prefix }} \
      #       --enable-cross-compile \
      #       --disable-debug \
      #       --enable-static \
      #       --disable-shared \
      #       --disable-doc \
      #       --disable-ffplay \
      #       --enable-gpl \
      #       --enable-libx264 \
      #       --prefix=$GITHUB_WORKSPACE/out \

      - name: Build FFmpeg
        shell: bash
        run: make -j$(nproc) V=1

      - name: Install FFmpeg
        shell: bash
        run: make install

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "native-${{ matrix.platform.name }}"
          path: "out/"